
package fr.gsb.app.controleurs;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JOptionPane;

import fr.gsb.app.entites.Visiteur;
import fr.gsb.app.modeles.ModeleAppliRV;
import fr.gsb.app.techniques.Session;
import fr.gsb.app.vues.VueListePraticiens;
import fr.gsb.app.vues.VueConnexion;
import fr.gsb.app.vues.VueTriPraticien;

public class ControleurTriPraticien implements ActionListener {
	
	private VueTriPraticien vue ;					// Vue associée au contrôleur
	
	public ControleurTriPraticien(VueTriPraticien vue){
		super() ;
		// Mémorise sa vue associée
		this.vue = vue ;
		
		// Question 8 - Se met à l'écoute des items de menu
		this.enregistrerEcouteur();
	}
	


	private void enregistrerEcouteur(){
	
		this.vue.getbValider().addActionListener(this) ;
		
		
		this.vue.getbAnnuler().addActionListener(this) ;
		
		
		
	}

	@Override
	public void actionPerformed(ActionEvent e) {
		
		Object sourceEvenement = e.getSource() ;
		
		
		
		 if( sourceEvenement == this.vue.getbValider() ){
			this.getPraticienTri();
		}
		else if( sourceEvenement == this.vue.getbAnnuler() ) {
			this.quitter();
		}
		
		
	}
	
	private void getPraticienTri(){
		
		if(this.vue.getbDate().isSelected()){
			System.out.println("TRI PAR DATE ") ;
			
			new VueListePraticiens("DATE" , "LISTE DES PRATICIENS - TRI PAR DATE " ) ;
		} else if (this.vue.getbCoefConf().isSelected()){
			System.out.println("TRI PAR COEF CONF" ) ;
			new VueListePraticiens("CONF" , "LISTE DES PRATICIENS - TRI PAR COEFFICIENT DE CONFIANCE ") ;
		} else if (this.vue.getbCoefNoto().isSelected()){
			System.out.println("TRI PAR COEF NOTO") ;
			new VueListePraticiens("NOTO" , "LISTE DES PRATICIENS - TRI PAR COEFFICIENT DE NOTORIETE ") ;
		} else if (this.vue.getbNoTri().isSelected()){
			new VueListePraticiens("NOTRI" , "LISTE DES PRATICIENS - AUCUN TRI SPECIFIQUE ") ;
		}
		
		//new VueListePraticiens(this.vue, this.vue.getCoefConfiance(), this.vue.getCoefNotoriete(), this.vue.getDate()) ;
		this.vue.dispose() ;
		
	}
	
	

	public void consulterPraticiens(){
		
	
		}

	
	private void quitter(){
		System.out.println("L'utilisateur veut quitter.");
		// Demande confirmation à l'utilisateur au moyen d'une boîte de dialogue
		int reponse = JOptionPane.showConfirmDialog(this.vue, "Voulez-vous vraiment quitter ?","Quitter",JOptionPane.YES_NO_OPTION) ;
		
		// Si l'utilateur confirme...
		if( reponse == JOptionPane.YES_OPTION ){
			
			this.vue.dispose();
			
			}		
			
		
	}
	
	
}