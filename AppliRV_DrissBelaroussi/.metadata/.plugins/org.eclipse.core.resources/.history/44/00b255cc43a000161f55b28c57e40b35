package fr.gsb.app.modeles;


import java.util.ArrayList;
import java.util.List;


import javax.swing.table.AbstractTableModel;


import fr.gsb.app.entites.Praticien;
import fr.gsb.app.entites.RapportVisite;


public class ModeleListePraticiens extends AbstractTableModel{
	
	private String[] entetes = {"Num√©ro du Praticien", "Nom du Praticien", "Ville du Praticien", "Coefficiant de Confiance", "Coefficient de Notoriete", "Date du dernier Rapport"};
	private String ceofNoto;
	private String coefConf;
	private String temps;
	private List<Praticien> lstPraticiens = new ArrayList<Praticien>();
	private String tri ;


	public ModeleListePraticiens(String tri) {
		super();
		this.tri = tri ;
		if (tri == "DATE"){
			lstPraticiens = ModeleAppliRV.getModele().getPraticienDate() ;
			
		} else if ( tri == "CONF"){
			lstPraticiens = ModeleAppliRV.getModele().getPraticienCoefConf() ;
		} else if (tri == "NOTO"){
			lstPraticiens = ModeleAppliRV.getModele().getPraticienCoefNoto() ;
		} else if (tri == "NOTRI"){
			// ADD METHOD
			lstPraticiens = ModeleAppliRV.getModele().getPraticiens() ;
		}
		
	}
	
	


	


	public ModeleListePraticiens(String ceofNoto, String coefConf, String temps) {
		super();
		this.ceofNoto = ceofNoto;
		this.coefConf = coefConf;
		this.temps = temps;
		
	}






	public ModeleListePraticiens(String[] entetes) {
		super();
		this.entetes = entetes;
	}






	public int getRowCount(){
		return this.lstPraticiens.size();
	}
	
	public int getColumnCount(){
		return this.entetes.length;
	}
	
	public String getColumnName(int columnIndex){
		return entetes[columnIndex];				
	}


	public Object getValueAt(int rowIndex, int columnIndex){
		Object objet;
		switch (columnIndex){
		
		case 0 :
			objet = new String(this.lstPraticiens.get(rowIndex).getPra_num());
			break;
			
		case 1 : 
			objet = new String(this.lstPraticiens.get(rowIndex).getNom());
			break;
			
		case 2 : 
			objet = new String(this.lstPraticiens.get(rowIndex).getVille());
			break;
			
		case 3 : 
			objet = new String(this.lstPraticiens.get(rowIndex).getUnRapport().getRap_coefConf());
			break;
			
		case 4 : 
			objet = new String(this.lstPraticiens.get(rowIndex).getCoefNotoriete());
			break;
			
		case 5 : 
			objet = new String(this.lstPraticiens.get(rowIndex).getUnRapport().getRap_date());
			break;
			
		default :
			objet = null;
			break;


		}	
		return objet;
	}
	
	
	public Class< ?> getColumnClass(int columnIndex){
		
		Class< ?> classe ;
		
		switch (columnIndex){
		case 0:
			classe = String.class;
			break;
			
		case 1:
			classe = String.class;
			break;
			
		case 2:
			classe = String.class;
			break;
			
		case 3:
			classe = String.class;
			break;
			
		case 4:
			classe = String.class;
			break;
			
		case 5:
			classe = String.class;
			break;
		
		default :
			classe = null;
			break;
		
		}
		return classe;
	}
	
	public void actualiser(){
		this.fireTableDataChanged();
	}
}

